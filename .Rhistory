show(p)
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with the mentioned variables
for (name in colnames(tab)) {
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Frequency")
print(p)
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with the mentioned variables
for (name in colnames(tab)) {
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(width = 5, fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Frequency")
print(p)
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with the mentioned variables
for (name in colnames(tab)) {
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Frequency")
print(p)
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with the mentioned variables
for (name in colnames(tab)) {
if (is.numeric(tab[[name]])) {
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Frequency")
print(p)
} else {
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Count")
print(p)
}
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with the mentioned variables
for (name in colnames(tab)) {
if (is.numeric(tab[[name]])) {
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +  # Adjust the binwidth as needed
labs(title = paste0("Distribution of ", name), x = name, y = "Frequency")
print(p)
} else {
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Count")
print(p)
}
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with the mentioned variables
for (name in colnames(tab)) {
if (is.numeric(tab[[name]])) {
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Frequency")
# Apply a log transformation for heavily right-skewed data
if (skewness(tab[[name]]) > 1) {
p <- p + scale_x_log10()
}
print(p)
} else {
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Count")
print(p)
}
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
library(skewness)
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
library(skewness)
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with the mentioned variables
for (name in colnames(tab)) {
if (is.numeric(tab[[name]])) {
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Frequency")
# Apply a log transformation for heavily right-skewed data
if (skewness(tab[[name]]) > 1) {
p <- p + scale_x_log10()
}
print(p)
} else {
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Count")
print(p)
}
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with the mentioned variables
for (name in colnames(tab)) {
if (is.numeric(tab[[name]])) {
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +  # Adjust the binwidth as needed
labs(title = paste0("Distribution of ", name), x = name, y = "Frequency")
print(p)
} else {
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = paste0("Distribution of ", name), x = name, y = "Count")
print(p)
}
}
table(tab$Gender)
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
# Assuming you have a dataset named 'tab' with various variables
# Check and visualize data types and outliers for all variables
for (name in colnames(tab)) {
# Check the data type (quantitative or qualitative)
data_type <- ifelse(is.numeric(tab[[name]]), "Quantitative", "Qualitative")
# Create a title for the plot
plot_title <- paste("Distribution of", name, "(", data_type, ")")
if (data_type == "Quantitative") {
# For quantitative variables
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = plot_title, x = name, y = "Frequency")
# Apply a log transformation for heavily right-skewed data
if (skewness(tab[[name]]) > 1) {
p <- p + scale_x_log10()
}
print(p)
} else {
# For qualitative variables
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = plot_title, x = name, y = "Count")
print(p)
}
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
library(e1071)
# Assuming you have a dataset named 'tab' with various variables
# Check and visualize data types and outliers for all variables
for (name in colnames(tab)) {
# Check the data type (quantitative or qualitative)
data_type <- ifelse(is.numeric(tab[[name]]), "Quantitative", "Qualitative")
# Create a title for the plot
plot_title <- paste("Distribution of", name, "(", data_type, ")")
if (data_type == "Quantitative") {
# For quantitative variables
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = plot_title, x = name, y = "Frequency")
# Apply a log transformation for heavily right-skewed data
if (skewness(tab[[name]]) > 1) {
p <- p + scale_x_log10()
}
print(p)
} else {
# For qualitative variables
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = plot_title, x = name, y = "Count")
print(p)
}
}
# Detect and print outliers for quantitative variables
for (name in colnames(tab)) {
if (is.numeric(tab[[name]])) {
cat("Outliers for", name, ":\n")
outlier_indices <- boxplot(tab[[name]], plot = FALSE)$out
cat(outlier_indices, "\n\n")
}
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
library(e1071)
# Assuming you have a dataset named 'tab' with various variables
# Check and visualize data types and outliers for all variables
for (name in colnames(tab)) {
# Check the data type (quantitative or qualitative)
data_type <- ifelse(is.numeric(tab[[name]]), "Quantitative", "Qualitative")
# Create a title for the plot
plot_title <- paste("Distribution of", name, "(", data_type, ")")
if (data_type == "Quantitative") {
# For quantitative variables
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = plot_title, x = name, y = "Frequency")
# Apply a log transformation for heavily right-skewed data
if (skewness(tab[[name]]) > 1) {
p <- p + scale_x_log10()
}
print(p)
} else {
# For qualitative variables
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = plot_title, x = name, y = "Count")
print(p)
}
}
# Detect and print outliers for quantitative variables
for (name in colnames(tab)) {
if (is.numeric(tab[[name]])) {
cat("Outliers for", name, ":\n")
outlier_indices <- boxplot(tab[[name]], plot = FALSE)$out
cat(outlier_indices, "\n\n")
print()
}
}
# cleaner
rm(list=ls()); graphics.off()
# imports
library("ggplot2")
# Read the dataset
tab <- read.csv(file="./data/credit-card-customers/BankChurners.csv",sep=',',dec='.',header=TRUE)
# check size and colonne names
colnames(tab)
dim(tab)
# tab class -> data.frame
class(tab)
# Dectect NaN values
tab_matrix <- as.matrix(tab)
nan_indices <- which(is.nan(tab_matrix))
if (length(nan_indices) > 0) {
print(tab[nan_indices])
}
summary(tab)
# Load necessary libraries
library(ggplot2)
library(e1071)
# Assuming you have a dataset named 'tab' with various variables
# Check and visualize data types and outliers for all variables
for (name in colnames(tab)) {
# Check the data type (quantitative or qualitative)
data_type <- ifelse(is.numeric(tab[[name]]), "Quantitative", "Qualitative")
# Create a title for the plot
plot_title <- paste("Distribution of", name, "(", data_type, ")")
if (data_type == "Quantitative") {
# For quantitative variables
p <- ggplot(tab, aes_string(x = name)) +
geom_histogram(binwidth = 10, fill = "blue", color = "black") +
labs(title = plot_title, x = name, y = "Frequency")
# Apply a log transformation for heavily right-skewed data
if (skewness(tab[[name]]) > 1) {
p <- p + scale_x_log10()
}
print(p)
} else {
# For qualitative variables
p <- ggplot(tab, aes_string(x = name)) +
geom_bar(fill = "blue", color = "black") +
labs(title = plot_title, x = name, y = "Count")
print(p)
}
}
# Detect and print outliers for quantitative variables
for (name in colnames(tab)) {
if (is.numeric(tab[[name]])) {
cat("Outliers for", name, ":\n")
outlier_indices <- boxplot(tab[[name]], plot = FALSE)$out
cat(outlier_indices, "\n\n")
}
}
